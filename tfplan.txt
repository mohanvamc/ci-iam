
Terraform will perform the following actions:

  # module.ci-iam.data.aws_iam_group.prod_ci_group will be read during apply
  # (config refers to values not yet known)
 <= data "aws_iam_group" "prod_ci_group"  {
      + arn        = (known after apply)
      + group_id   = (known after apply)
      + group_name = "prod-ci-group-aws"
      + id         = (known after apply)
      + path       = (known after apply)
      + users      = (known after apply)
    }

  # module.ci-iam.aws_iam_group.prod_ci_group will be created
  + resource "aws_iam_group" "prod_ci_group" {
      + arn       = (known after apply)
      + id        = (known after apply)
      + name      = "prod-ci-group-aws"
      + path      = "/"
      + unique_id = (known after apply)
    }

  # module.ci-iam.aws_iam_group_membership.prod_ci_group_membership will be created
  + resource "aws_iam_group_membership" "prod_ci_group_membership" {
      + group = "prod-ci-group-aws"
      + id    = (known after apply)
      + name  = (known after apply)
      + users = [
          + "prod-ci-user-aws",
        ]
    }

  # module.ci-iam.aws_iam_group_policy_attachment.prod_ci_group_policy_attachment will be created
  + resource "aws_iam_group_policy_attachment" "prod_ci_group_policy_attachment" {
      + group      = "prod-ci-group-aws"
      + id         = (known after apply)
      + policy_arn = (known after apply)
    }

  # module.ci-iam.aws_iam_policy.prod_ci_policy will be created
  + resource "aws_iam_policy" "prod_ci_policy" {
      + arn       = (known after apply)
      + id        = (known after apply)
      + name      = "prod-ci-policy-aws"
      + path      = "/"
      + policy    = (known after apply)
      + policy_id = (known after apply)
      + tags_all  = (known after apply)
    }

  # module.ci-iam.aws_iam_role.prod_ci_role will be created
  + resource "aws_iam_role" "prod_ci_role" {
      + arn                   = (known after apply)
      + assume_role_policy    = jsonencode(
            {
              + Statement = [
                  + {
                      + Action    = "sts:AssumeRole"
                      + Effect    = "Allow"
                      + Principal = {
                          + AWS = "*"
                        }
                    },
                ]
              + Version   = "2012-10-17"
            }
        )
      + create_date           = (known after apply)
      + force_detach_policies = false
      + id                    = (known after apply)
      + managed_policy_arns   = (known after apply)
      + max_session_duration  = 3600
      + name                  = "prod-ci-role-aws"
      + name_prefix           = (known after apply)
      + path                  = "/"
      + tags_all              = (known after apply)
      + unique_id             = (known after apply)

      + inline_policy {
          + name   = (known after apply)
          + policy = (known after apply)
        }
    }

  # module.ci-iam.aws_iam_user.prod_ci_user will be created
  + resource "aws_iam_user" "prod_ci_user" {
      + arn           = (known after apply)
      + force_destroy = false
      + id            = (known after apply)
      + name          = "prod-ci-user-aws"
      + path          = "/"
      + tags_all      = (known after apply)
      + unique_id     = (known after apply)
    }

Plan: 6 to add, 0 to change, 0 to destroy.

───────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────────
